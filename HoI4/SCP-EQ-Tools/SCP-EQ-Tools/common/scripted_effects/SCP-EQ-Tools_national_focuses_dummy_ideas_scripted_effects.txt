# Returns country-scoped variable SCP-EQ-Tools_current_ongoing_focus_token
# Check SCP-EQ-Tools_is_current_ongoing_focus_token_valid to ensure the result is valid
SCP-EQ-Tools_national_focuses_dummy_ideas_get_ongoing_focus_token = {
    if = {
        limit = {
            NOT = { has_global_flag = SCP-EQ-Tools_is_national_focuses_dummy_ideas_tokens_init_done }
        }
        SCP-EQ-Tools_national_focuses_dummy_ideas_init_tokens = yes
    }

    set_temp_variable = { temp_is_found = 0 }
    set_variable = { SCP-EQ-Tools_is_current_ongoing_focus_token_valid = 0 }
    
    # Find current ongoing national focus
    for_each_loop = {
        array = global.SCP-EQ-Tools_national_focuses_tokens
        value = temp_current_focus
        break = temp_is_found
        
        meta_effect = {
            text = {
                if = {
                    limit = {
                        focus_progress = {
                            focus = [FOCUS_TOKEN]
                            progress < 1
                        }
                        focus_progress = {
                            focus = [FOCUS_TOKEN]
                            progress > 0
                        }
                    }
                    log = "Found ongoing focus [FOCUS_TOKEN]"
                    set_variable = { SCP-EQ-Tools_current_ongoing_focus_token = temp_current_focus }
                    set_variable = { SCP-EQ-Tools_is_current_ongoing_focus_token_valid = 1 }
                    set_temp_variable = { temp_is_found = 1 }
                }
            }
            FOCUS_TOKEN = "[?temp_current_focus.GetTokenKey]"
        }
    }
}

SCP-EQ-Tools_national_focuses_dummy_ideas_complete_ongoing_focus = {
    if = {
        limit = {
            NOT = { has_global_flag = SCP-EQ-Tools_is_national_focuses_dummy_ideas_tokens_init_done }
        }
        SCP-EQ-Tools_national_focuses_dummy_ideas_init_tokens = yes
    }
    
    SCP-EQ-Tools_national_focuses_dummy_ideas_get_ongoing_focus_token = yes
    if = {
        limit = {
            check_variable = { SCP-EQ-Tools_is_current_ongoing_focus_token_valid > 0 }
        }
        log = "Completing focus [?SCP-EQ-Tools_current_ongoing_focus_token.GetTokenKey] ([?SCP-EQ-Tools_current_ongoing_focus_token.GetTokenLocalizedKey])"
        meta_effect = {
            text = {
                complete_national_focus = [FOCUS_TOKEN]
            }
            FOCUS_TOKEN = "[?SCP-EQ-Tools_current_ongoing_focus_token.GetTokenKey]"
        }
    }
}
