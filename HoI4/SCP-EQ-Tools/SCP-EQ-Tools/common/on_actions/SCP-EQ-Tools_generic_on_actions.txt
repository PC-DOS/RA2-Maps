on_actions = {
    on_startup = {
        effect = {
            # Set some global flags
            random_country = {
                # Prevent AI from leaving factions from diplomacy UI by default
                set_variable = { global.SCP-EQ-Tools_enhancing_decisions_ai_faction_operation_level = 2 }
            }
        }
    }
    on_daily = {
        effect = {
            # Handles "nuclear radiation" effect dealt by SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state
            # Radiation kills local people
            every_controlled_state = {
                limit = {
                    has_state_flag = {
                        flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                    }
                }
                #log = "Radiation effect on [?THIS.GetName] controlled by [?controller.GetName]"
                set_temp_variable = { temp_param_state_population_change_percentage = -0.05 }
                multiply_temp_variable = { temp_param_state_population_change_percentage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                SCP-EQ-Tools_generic_scripted_effects_change_state_population_by_percentage = yes
                if = {
                    limit = {
                        state_population_k < 0.001
                        state_population < 1
                    }
                    add_manpower = 1
                }
            }
            # Radiation damages units
            if = {
                limit = {
                    has_country_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_country_nuked
                }
                every_controlled_state = {
                    limit = {
                        has_state_flag = {
                            flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                        }
                    }
                    set_temp_variable = { temp_damage_to_units = 0.05 }
                    multiply_temp_variable = { temp_damage_to_units = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    damage_units = {
                        state = THIS
                        limit = { has_country_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_country_nuked }
                        damage = var:temp_damage_to_units
                        org_damage = var:temp_damage_to_units
                        str_damage = var:temp_damage_to_units
                        ratio = yes
                        army = yes
                        navy = yes
                    }
                }
            }
            # Every nuked state will do harm to its controller at that time, unless the controller have lost the states' control
            # Harm is judged by the state's radiation level
            if = {
                limit = {
                    has_country_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_country_nuked
                }
                every_controlled_state = {
                    limit = {
                        has_state_flag = {
                            flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                        }
                    }
                    set_temp_variable = { temp_political_power_damage = -5 }
                    set_temp_variable = { temp_command_power_damage = -5 }
                    set_temp_variable = { temp_manpower_damage = -25 }
                    set_temp_variable = { temp_army_experience_damage = -5 }
                    set_temp_variable = { temp_navy_experience_damage = -5 }
                    set_temp_variable = { temp_air_experience_damage = -5 }
                    set_temp_variable = { temp_war_support_damage = -0.05 }
                    set_temp_variable = { temp_stability_damage = -0.05 }
                    multiply_temp_variable = { temp_political_power_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_command_power_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_manpower_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_army_experience_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_navy_experience_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_air_experience_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_war_support_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    multiply_temp_variable = { temp_stability_damage = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level }
                    controller = {
                        add_political_power = var:temp_political_power_damage
                        add_command_power = var:temp_command_power_damage
                        add_manpower = var:temp_manpower_damage
                        army_experience = var:temp_army_experience_damage
                        navy_experience = var:temp_navy_experience_damage
                        air_experience = var:temp_air_experience_damage
                        add_war_support = var:temp_war_support_damage
                        add_stability = var:temp_stability_damage
                    }
                }
            }
        }
    }
    on_monthly = {
        effect = {
            # Handles "nuclear radiation" effect dealt by SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state
            # Radiation fades out after 730 days since last nuking
            every_controlled_state = {
                limit = {
                    has_state_flag = {
                        flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                        days > 730
                    }
                }
                #log = "Radiation fades out at [?THIS.GetName], radiation level [?SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level]"
                remove_province_modifier = {
                    static_modifiers = { SCP-EQ-Tools_province_modifiers_nuked_modifier }
                    province = {
                        all_provinces = yes
                    }
                }
                clr_state_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                subtract_from_variable = { SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level = 1 }
                # If there are accumulated radiation, register for another radiation fading cycle
                if = {
                    limit = {
                        check_variable = { SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level > 0 }
                    }
                    #log = "[?THIS.GetName] still have radiation level [?SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_current_state_radiation_level]"
                    set_state_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                }
            }
            # Check if we need to remove this country's "nuked" flag
            if = {
                limit = {
                    has_country_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_country_nuked
                }
                set_temp_variable = { temp_count_nuked_states = 0 }
                every_controlled_state = {
                    limit = {
                        has_state_flag = {
                            flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_state_nuked
                        }
                    }
                    add_to_temp_variable = { temp_count_nuked_states = 1 }
                }
                if = {
                    limit = { 
                        check_variable = { temp_count_nuked_states = 0 }
                    }
                    clr_country_flag = SCP-EQ-Tools_generic_scripted_effects_nuke_specified_state_is_this_country_nuked
                }
            }
        }
    }
}